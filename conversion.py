import json

def convert_raw_to_json_and_save(raw_data, filename):
    result = []
    for line in raw_data.strip().split("\n"):
        marks, percentile = line.split()
        result.append({"marks": int(marks), "percentile": float(percentile)})
    
    json_output = json.dumps(result, indent=4)
    
    with open(filename, "w") as file:
        file.write(json_output)
    
    print(f"Data successfully saved to {filename}")

# Example usage:
raw_data = """ 291	100
285	99.994
280	99.984
271	99.969
270	99.964
268	99.949
267	99.947
265	99.937
264	99.920
263	99.916
262	99.914
261	99.911
260	99.902
259	99.888
258	99.885
257	99.875
256	99.868
255	99.862
254	99.848
253	99.842
252	99.832
251	99.823
250	99.818
249	99.805
248	99.797
246	99.783
245	99.773
244	99.757
243	99.750
242	99.741
241	99.730
240	99.719
239	99.695
238	99.687
237	99.675
236	99.663
235	99.646
234	99.632
233	99.617
232	99.601
230	99.564
229	99.553
228	99.529
227	99.510
226	99.488
225	99.460
224	99.435
223	99.415
222	99.394
221	99.369
220	99.338
219	99.312
218	99.286
217	99.252
216	99.225
215	99.199
214	99.157
213	99.122
212	99.094
211	99.056
210	99.015
209	98.96
208	98.92
207	98.89
206	98.84
205	98.80
204	98.76
203	98.71
202	98.68
201	98.63
200	98.59
199	98.53
198	98.49
197	98.44
196	98.39
195	98.35
194	98.30
193	98.24
192	98.19
191	98.14
190	98.06
189	97.99
188	97.91
187	97.85
186	97.78
185	97.70
184	97.62
183	97.54
182	97.46
181	97.40
180	97.32
179	97.22
178	97.12
177	97.04
176	96.96
175	96.87
174	96.75
173	96.65
172	96.55
171	96.46
170	96.35
169	96.22
168	96.10
167	96.01
166	95.90
165	95.79
164	95.64
163	95.52
162	95.41
161	95.29
160	95.18
159	95.03
158	94.90
157	94.79
156	94.67
155	94.56
154	94.41
153	94.27
152	94.12
151	93.98
150	93.84
149	93.69
148	93.56
147	93.41
146	93.26
145	93.10
144	92.92
143	92.75
142	92.59
141	92.43
140	92.27
139	92.11
138	91.96
137	91.78
136	91.60
135	91.43
134	91.24
133	91.05
132	90.87
131	90.70
130	90.49
129	90.30
128	90.11
127	89.90
126	89.70
125	89.48
124	89.26
123	89.08
122	88.84
121	88.63
120	88.39
119	88.15
118	87.93
117	87.73
116	87.51
115	87.27
114	87.04
113	86.82
112	86.59
111	86.36
110	86.12
109	85.86
108	85.61
107	85.35
106	85.12
105	84.87
104	84.59
103	84.32
102	84.06
101	83.78
100	83.50
99	83.23
98	82.92
97	82.62
96	82.33
95	82.03
94	81.70
93	81.38
92	81.07
91	80.76
90	80.43
89	80.08
88	79.74
87	79.41
86	79.08
85	78.73
84	78.32
83	77.93
82	77.55
81	77.18
80	76.83
79	76.40
78	76.01
77	75.59
76	75.19
75	74.79
74	74.30
73	73.87
72	73.42
71	72.96
70	72.52
69	71.98
68	71.53
67	71.03
66	70.56
65	70.08
64	69.43
63	68.88
62	68.31
61	67.73
60	67.20
59	66.46
58	65.80
57	65.20
56	64.61
55	64.01
54	63.18
53	62.44
52	61.68
51	61.01
50	60.28
49	59.30
48	58.48
47	57.66
46	56.86
45	56.04
44	54.86
43	53.85
42	52.95
41	52.03
40	51.15
39	49.81
38	48.77
37	47.75
36	46.77
35	45.81
34	44.28
33	43.15
32	42.02
31	40.88
30	39.86
29	38.08
28	36.83
27	35.66
26	34.55
25	33.47
24	31.68
23	30.41
22	29.18
21	28.04
20	26.99
19	25.14
18	23.92
17	22.79
16	21.76
15	20.74
14	19.03
13	17.94
12	16.89
11	15.94
10	15.11
9	13.56
8	12.67
7	11.85
6	11.06
5	10.37
4	9.05
3	8.35
2	7.70
1	7.11
0	6.62
-1	5.57
-2	5.04
-3	4.64
-4	4.28
-5	3.98
-6	3.23
-7	2.92
-8	2.66
-9	2.42
-10	2.23
-11	1.76
-12	1.58
-13	1.43
-14	1.30
-15	1.19
-16	0.89
-17	0.78
-18	0.69
-19	0.64
-20	0.59
-21	0.42
-22	0.38
-23	0.34
-24	0.31
-25	0.27
-27	0.15
-29	0.13
-30	0.12
-31	0.08
-32	0.06
-34	0.05
-39	0.01"""

convert_raw_to_json_and_save(raw_data, "2025-01-24_evening.txt")
